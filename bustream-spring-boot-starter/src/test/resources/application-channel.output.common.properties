### 生产者（channel name: output） 的相关配置
#为Channel指定Binder，这将决定Channel使用哪个MQ
spring.cloud.stream.bindings.output.binder=kafkaCluster
#spring.cloud.stream.bindings.output.binder=rabbitCluster

## 属于 Stream Binding的通用配置
#生产者必须确保将消息传递到这些组，即使这些组在消息创建之后才开始传递；
# 此处有坑，当相同binder的生产者和消费者在同一进程，如果生产者的CachingConnectionFactory先创建，
# 会引发后续消费者创建Connection时“protocol method”中的参数不一致，如’x-message-ttl‘等；但通常相同binder的生产者和消费者不会出现在同一进程；
#spring.cloud.stream.bindings.output.producer.required-groups[0]=repayBack
#消息生产者的分区设置
#spring.cloud.stream.bindings.output.producer.partitionKeyExpression=payload.userId
#spring.cloud.stream.bindings.output.producer.partitionKeyExpression=headers.id

## 属于特定于RabbitMq的Binding,不是通用的(如果涉及到mq的转换则不可用; 同样以key的方式指定配置，默认为default-binder);
#spring.cloud.stream.rabbit.bindings.output.producer.routing-key-expression=header.messageType

## 属于特定于Kafka的Binding,不是通用的(如果涉及到mq的转换则不可用; 同样以key的方式指定配置，默认为default-binder);

