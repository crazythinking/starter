#从消费者服务端的视角，指定其将要消费的Topic的前缀
gm.bustream.default-producer-name=bustream-test
gm.bustream.other-producer-names.scac=scac-online-sv
gm.bustream.other-producer-names.sccust=sccust-online-sv

### 消费者
## 属于特定于RabbitMq的Binding,不是通用的(如果涉及到mq的转换则不可用; 同样以key的方式指定配置，默认为default);
#指定exchange类型direct的相应的配置，不推荐使用，默认使用topic
#spring.cloud.stream.rabbit.bindings.input.consumer.exchangeType=direct
#spring.cloud.stream.rabbit.bindings.input.consumer.bindQueue=true
#spring.cloud.stream.rabbit.bindings.input.consumer.queueNameGroupOnly=true
#spring.cloud.stream.rabbit.bindings.input.consumer.declareExchange=false
#指定消息进入死信队列的间隔时间
spring.cloud.stream.rabbit.bindings.input.consumer.ttl=200000
#只有与指定的routingKey相同的消息才会从exchange转发到该consumer对应的queue; 不配置时routingKey为“#”
#spring.cloud.stream.rabbit.bindings.input.consumer.binding-routing-key=${spring.cloud.stream.bindings.input.group}
spring.cloud.stream.rabbit.bindings.input.consumer.acknowledge-mode=auto

## 属于 Stream Binding的通用配置
#queue的后缀, 必须带有业务含义；在topic模式下其还作为分组
spring.cloud.stream.bindings.input.group=repayBack


### 生产者
## 属于特定于RabbitMq的Binding,不是通用的
#spring.cloud.stream.rabbit.bindings.output.producer.routing-key-expression=header.messageType

## 属于 Stream Binding的通用配置
#spring.cloud.stream.bindings.output.producer.required-groups[0]=${spring.cloud.stream.bindings.input.group}
#消息生产者的分区设置
#spring.cloud.stream.bindings.output.producer.partitionKeyExpression=payload.userId
#spring.cloud.stream.bindings.output.producer.partitionKeyExpression=headers.id

